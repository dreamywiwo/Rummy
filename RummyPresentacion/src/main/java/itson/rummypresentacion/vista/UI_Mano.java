/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package itson.rummypresentacion.vista;


import java.awt.Color;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.List;


public class UI_Mano extends javax.swing.JPanel {
    private List<UI_Ficha> fichas;
    private UI_Tablero tablero;
    private List<UI_Ficha> fichasSeleccionadas;
    
    public UI_Mano() {
        this.fichas = new ArrayList<>();
        this.fichasSeleccionadas = new ArrayList<>();
        initComponents();
        setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
        setBackground(new Color(39, 41, 72));
    }
    
    public void setTablero(UI_Tablero tablero) {
        this.tablero = tablero;
    }
    
    public void agregarFicha(UI_Ficha ficha) {
        configurarFichaParaSeleccion(ficha);
        fichas.add(ficha);
        add(ficha);
        revalidate();
        repaint();
    }
    
    private void configurarFichaParaSeleccion(UI_Ficha ficha) {
        ficha.addActionListener(e -> {
            if (ficha.isSelected()) {
                fichasSeleccionadas.add(ficha);
                System.out.println("Ficha " + ficha.getNumero() + " seleccionada");
            } else {
                fichasSeleccionadas.remove(ficha);
                System.out.println("Ficha " + ficha.getNumero() + " deseleccionada");
            }
            actualizarInfoSeleccion();
        });
    }
    
    private void actualizarInfoSeleccion() {
        System.out.println("Fichas seleccionadas: " + fichasSeleccionadas.size());
        for (UI_Ficha ficha : fichasSeleccionadas) {
            System.out.println(" - Ficha " + ficha.getNumero() + " " + ficha.getFichaColor());
        }
    }
    
    public List<UI_Ficha> getFichasSeleccionadas() {
        return new ArrayList<>(fichasSeleccionadas);
    }
    
    public void limpiarSeleccion() {
        for (UI_Ficha ficha : fichasSeleccionadas) {
            ficha.setSelected(false);
        }
        fichasSeleccionadas.clear();
        actualizarInfoSeleccion();
    }
    
    public void removerFichasSeleccionadas() {
        for (UI_Ficha ficha : fichasSeleccionadas) {
            fichas.remove(ficha);
            remove(ficha);
        }
        fichasSeleccionadas.clear();
        revalidate();
        repaint();
    }
    
    public void limpiarMano() {
        for (UI_Ficha ficha : fichas) {
            remove(ficha);
        }
        fichas.clear();
        fichasSeleccionadas.clear();
        revalidate();
        repaint();
    }
    
    public List<UI_Ficha> getFichas() {
        return new ArrayList<>(fichas);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(39, 41, 72));
        setPreferredSize(new java.awt.Dimension(1450, 190));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
